(set-option :produce-models true)
(declare-const e Int)
(declare-const a Int)
(declare-fun f (Int Int) Int)
(declare-fun h (Int) Int)
(assert (and 
(= (f (f e e) e) (f e (f e e))) 
(= (f (f e e) a) (f e (f e a))) 
(= (f (f e a) e) (f e (f a e))) 
(= (f (f e a) a) (f e (f a a))) 
(= (f (f a e) e) (f a (f e e))) 
(= (f (f a e) a) (f a (f e a))) 
(= (f (f a a) e) (f a (f a e))) 
(= (f (f a a) a) (f a (f a a))) 
(= (f e e) e) 
(= (f a e) a) (= (f e a) a) 
(= (f e (h e)) e) (= (f (h e) e) e) 
(= (f a (h a)) e) (= (f (h a) a) e) 
(= (f e a) e) (= (f a e) e) (not (= a e)) 
(= (f a a) a) (= (f a a) a) (not (= a e))))
(check-sat)
(get-model)